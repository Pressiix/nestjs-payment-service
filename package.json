{
  "name": "payment-services",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:local": "source infra/local/local.env && nest start --watch",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "infra:up": "source infra/local/local.env  && docker-compose up -d rds redis localstack",
    "typeorm": "ts-node ./node_modules/typeorm/cli.js",
    "pg:schema:sync": "source infra/local/local.env && npm run typeorm -- schema:sync -d src/configs/postgres.database.config.ts",
    "pg:schema:drop": "source infra/local/local.env && npm run typeorm -- schema:drop -d src/configs/postgres.database.config.ts",
    "pg:migrate:show": "source infra/local/local.env && npm run typeorm -- migration:show -d src/configs/postgres.database.config.ts",
    "pg:migrate:create": "source infra/local/local.env && npm run typeorm -- -d src/configs/postgres.database.config.ts migration:generate ./src/migrations/postgres/$npm_config_name",
    "pg:migrate:up": "source infra/local/local.env &&  npm run typeorm migration:run -- -d src/configs/postgres.database.config.ts",
    "pg:migrate:down": "source infra/local/local.env &&  npm run typeorm -- -d src/configs/postgres.database.config.ts migration:revert",
    "migrate:up": "npm run typeorm migration:run -- -d src/configs/postgres.database.config.ts"
  },
  "dependencies": {
    "@nestjs/axios": "^3.0.2",
    "@nestjs/cache-manager": "^2.2.2",
    "@nestjs/common": "^9.2.1",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.2.1",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^9.2.1",
    "@nestjs/platform-fastify": "^9.2.1",
    "@nestjs/terminus": "^10.2.3",
    "@nestjs/typeorm": "^9.0.1",
    "aws-sdk": "^2.1640.0",
    "axios": "^1.7.5",
    "cache-manager": "^3.6.3",
    "cache-manager-ioredis": "^2.1.0",
    "cerialize": "^0.1.18",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "helmet": "^7.1.0",
    "jsonwebtoken": "^9.0.0",
    "jwt-decode": "^4.0.0",
    "lodash": "^4.17.21",
    "luxon": "^3.4.4",
    "omise": "^0.12.1",
    "passport-headerapikey": "^1.2.2",
    "pg": "^8.12.0",
    "reflect-metadata": "^0.1.13",
    "typeorm": "^0.3.11",
    "typeorm-naming-strategies": "^4.1.0",
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.1.8",
    "@nestjs/schematics": "^8.0.11",
    "@nestjs/testing": "^9.2.1",
    "@types/cache-manager": "^3.4.3",
    "@types/express": "^4.17.13",
    "@types/jest": "^29.0.0",
    "@types/node": "^20.0.0",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.48.2",
    "@typescript-eslint/parser": "^5.48.2",
    "eslint": "^7.30.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.0",
    "jest": "^29.0.0",
    "prettier": "^2.3.2",
    "supertest": "^6.1.3",
    "ts-jest": "^29.1.4",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "^4.1.2",
    "typescript": "^4.3.5",
    "webpack": "^5.92.0"
  },
  "jest": {
    "moduleNameMapper": {
      "^src/(.*)": "<rootDir>/src/$1"
    },
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".spec.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "coveragePathIgnorePatterns": [
      "test",
      "src/filters",
      "src/configs",
      "src/interceptors",
      "src/models",
      "src/main.ts",
      "src/entities",
      "src/responses",
      "src/services/vault.config.service.ts",
      "src/services/aws.s3.service.ts",
      "src/services/config.service.ts"
    ],
    "coverageReporters": [
      "text",
      "lcov",
      "json",
      "text",
      "clover",
      "cobertura"
    ]
  }
}
